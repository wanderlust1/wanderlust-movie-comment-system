<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dao.CommentDaoImpl">

	<select id="queryCommentByMovieId" resultType="entity.Comment" parameterType="Map">
		select
			movie_id as movieId, vote as count, nick_name as username, comment.time, comment as content,
			score as rate, users.user_id as userId, comment.comment_id as id, users.header as header,
			cast (case when comment_like.user_id is null then 0 else 1 end as int) as isLike
		from
			comment left join comment_like on comment.comment_id = comment_like.comment_id
			and comment_like.user_id = #{user_id}, users
		where
			movie_id = #{movie_id} and users.user_id = comment.user_id
	</select>

	<insert id="insertComment" parameterType="entity.Comment">
		insert into comment(movie_id, vote, time, comment, score, user_id, comment_id)
		values(#{movieId}, #{count}, #{time}, #{content}, #{rate}, #{userId}, #{id})
	</insert>

	<insert id="insertLike" parameterType="Map">
		insert into comment_like(comment_id, user_id, time)
		values(#{comment_id}, #{user_id}, #{time})
	</insert>

	<delete id="deleteLike" parameterType="Map">
		delete from comment_like
		where comment_id = #{comment_id} and user_id = #{user_id}
	</delete>

	<select id="queryCommentRecordById" resultType="entity.Comment" parameterType="String">
		select movie.movie_id as movieId, time, comment as content, score as rate, title as movieName, comment.comment_id as id, vote as count
		from comment, movie
		where user_id = #{0} and comment.movie_id = movie.movie_id
	</select>

	<select id="queryLikeRecordById" resultType="entity.Like" parameterType="String">
		select
			movie.title as movieName, movie.movie_id as movieId, comment.comment_id as commentId,
			comment.comment as commentContent, comment.user_id as userId, comment_like.time as time,
			users.nick_name as commentUserName, users.header as commentUserHeader, score as rate
		from
			comment_like, comment, movie, users
		where
			comment_like.user_id = #{0} and comment_like.comment_id = comment.comment_id and
			comment.movie_id = movie.movie_id and users.user_id = comment.user_id
	</select>

	<delete id="deleteComment" parameterType="String">
		delete from comment where comment_id = #{0}
	</delete>

</mapper>

