<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dao.CommentDaoImpl">

	<select id="queryCommentByMovieId" resultType="entity.Comment" parameterType="Map">
		select
			movie_id as movieId, vote as count, nick_name as username, time, comment as content,
			score as rate, users.user_id as userId, comment.comment_id as id,
			cast (case when comment_like.user_id is null then 0 else 1 end as int) as isLike
		from
			comment left join comment_like on comment.comment_id = comment_like.comment_id
			and comment_like.user_id = #{user_id}, users
		where
			movie_id = #{movie_id} and users.user_id = comment.user_id
	</select>

	<insert id="insertComment" parameterType="entity.Comment">
		insert into comment(movie_id, vote, name, time, comment, score, user_id, comment_id)
		values(#{movieId}, #{count}, #{username}, #{time}, #{content}, #{rate}, #{userId}, #{id})
	</insert>

	<insert id="insertLike" parameterType="Map">
		insert into comment_like(comment_id, user_id)
		values(#{comment_id}, #{user_id})
	</insert>

	<delete id="deleteLike" parameterType="Map">
		delete from comment_like
		where comment_id = #{comment_id} and user_id = #{user_id}
	</delete>

</mapper>

