<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dao.MovieDaoImpl">

	<!-- 查询所有电影详细数据 -->
	<select id="queryAllMovieDetail" resultType="entity.MovieDetail">
		select *
		from movie_detail
	</select>

	<!-- 根据关键词查询所有相关电影的详细数据 -->
	<select id="queryMovieDetailBySearch" resultType="entity.MovieDetail" parameterType="String">
		select *
		from movie_detail
		where movieName like '%' + #{0} + '%' or movieAlias like '%' + #{0} + '%' or movieId like '%' + #{0} + '%'
	</select>

	<!-- 查询所有电影详细数据，传入过滤器 -->
	<select id="queryAllMovies" resultType="entity.Movie" parameterType="entity.MovieFilter">
		select movie_id as id, title, movie.rate, count(1) over() as total
		from movie, movie_detail
		<where>
			movie.movie_id = movie_detail.movieId and movieType like '%' + #{style} + '%' and movieDate like '%' + #{year} + '%' and
			<foreach item="item" collection="area" separator="or" open="(" close=")" index="">
				movieArea like '%' + #{item} + '%'
			</foreach>
		</where>
		order by
		<choose>
			<when test="sort == 'rate'">
				rate DESC
			</when>
			<when test="sort == 'name'">
				title
			</when>
			<otherwise>
				movie_id
			</otherwise>
		</choose>
		 offset (#{currPage} - 1) * #{pageSize} row fetch next #{pageSize} row only
	</select>

	<!-- 根据关键词查询所有相关电影的详细数据 -->
	<select id="queryMoviesBySearch" resultType="entity.Movie" parameterType="Map">
		select movie_id as id, title, rate, count(1) over() as total
		from movie
		where title like '%' + #{key} + '%'
		order by movie_id offset (#{currPage} - 1) * #{pageSize} row fetch next #{pageSize} row only
	</select>

	<insert id="insertMovie" parameterType="entity.MovieDetail">
		insert into movie_detail (
			movieId, movieName, director, scriptwriter, actors, movieType,
			movieArea, movieLang, movieDate, movieSize, movieAlias, movieIMDb, movieDesc, rate, rateCount, ratePer
		)
		values (
			#{movieId}, #{movieName}, #{director}, #{scriptwriter}, #{actors}, #{movieType},
			#{movieArea}, #{movieLang}, #{movieDate}, #{movieSize}, #{movieAlias}, #{movieIMDb}, #{movieDesc}, #{rate}, #{rateCount}, #{ratePer}
		)
	</insert>

	<insert id="setFavour" parameterType="Map">
		insert into favour(user_id, movie_id)
		values (#{user_id}, #{movie_id})
	</insert>

	<select id="getFavourList" resultType="entity.Movie" parameterType="String">
		select movie_id as id, title, rate
		from favour, movie
		where movie.movie_id = favour.movie_id and favour.user_id = #{0}
	</select>

	<select id="getFavourStatus" resultType="Map" parameterType="Map">
		select * from favour where user_id = #{user_id} and movie_id = #{movie_id}
	</select>

</mapper>

